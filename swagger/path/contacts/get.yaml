tags:
  - Contacts
summary: Get all contacts
operationId: getContacts
description: Get all contacts
security:
  - bearerAuth: []

parameters:
  - name: sortBy
    in: query
    description: Field to sort by (e.g., name, email, createdAt)
    required: false
    schema:
      type: string
      enum: [name, email, createdAt]
      example: name

  - name: sortOrder
    in: query
    description: Sort order (asc or desc)
    required: false
    schema:
      type: string
      enum: [asc, desc]
      example: asc

  - name: page
    in: query
    description: Current page
    required: false
    schema:
      type: number
      example: 4

  - name: perPage
    in: query
    description: Contacts per page
    required: false
    schema:
      type: number
      example: 4

responses:
  '200':
    description: Successfully get contacts
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
            - totalItems
            - page
            - perPage
            - totalPages
            - hasNextPage
            - hasPreviousPage
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully get contacts
            data:
              type: array
              items:
                $ref: ../../components/schemas/student.yaml
            totalItems:
              type: number
              example: 4
            page:
              type: number
              example: 1
            perPage:
              type: number
              example: 15
            totalPages:
              type: number
              example: 5
            hasNextPage:
              type: boolean
              example: false
            hasPreviousPage:
              type: boolean
              example: true
  '401':
    $ref: ../../components/responses/500.yaml
  '404':
    description: Contact not found
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 404
            message:
              type: string
              example: Contact not found
  '500':
    $ref: ../../components/responses/500.yaml
